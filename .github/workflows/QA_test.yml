name: QA Pipeline for Next.js

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_ENV
            echo "command=install" >> $GITHUB_ENV
            echo "runner=yarn" >> $GITHUB_ENV
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_ENV
            echo "command=ci" >> $GITHUB_ENV
            echo "runner=npx --no-install" >> $GITHUB_ENV
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Copy public directory to .next/public
        run: cp -r public .next/public

      - name: Static HTML export with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next export
        
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: nextjs-artifact
          path: ./out

  qa_pipeline:
    runs-on: ubuntu-latest
    needs: build
    environment:
      - name: prod
      - url: https://ainasorfina01.github.io/NextJS-Tailwind-Responsive/
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run QA Tests
        run: npm test

      - name: Send QA Approval Request
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets_SMTP_USERNAME }}
          password: ${{ secrets_SMTP_PASSWORD }}
          to: ${{ secrets_QA_EMAIL }}
          subject: 'QA Approval Request'
          body: 'Please review the QA results and approve.'
    
      - name: Archive test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: /test/results


      - name: Download test results
        uses: actions/download-artifact@v2
        with:
          name: test-results  # The name of the artifact to download
          path: ./test-results  # The directory where the artifact should be saved


      - name: Wait for QA Approval
        run: |
          while [ "$(gh issue view <issue_number> -q '.state')" != "closed" ]; do sleep 60; done
        continue-on-error: true

    
